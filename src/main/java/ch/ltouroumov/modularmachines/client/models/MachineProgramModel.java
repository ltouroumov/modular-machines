// Date: 14.11.2014 20:10:53
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package ch.ltouroumov.modularmachines.client.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class MachineProgramModel extends ModelBase {
    //fields
    ModelRenderer ModuleBase;
    ModelRenderer Connector;
    ModelRenderer Circuit1;
    ModelRenderer Circuit2;
    ModelRenderer Circuit3;
    ModelRenderer Component1;
    ModelRenderer Component2;
    ModelRenderer Component3;
    ModelRenderer Component4;
    ModelRenderer Component5;
    ModelRenderer Component6;
    ModelRenderer Component7;
    ModelRenderer Component8;
    ModelRenderer Component9;
    ModelRenderer Component10;
    ModelRenderer Component11;
    ModelRenderer Component12;
    ModelRenderer Component13;
    ModelRenderer Component14;
    ModelRenderer Component15;
    ModelRenderer Component16;
    ModelRenderer Component17;
    ModelRenderer Component18;
    ModelRenderer Component19;
    ModelRenderer Component20;
    ModelRenderer Component21;
    ModelRenderer Component22;
    ModelRenderer Component23;
    ModelRenderer Component24;

    public MachineProgramModel() {
        textureWidth = 32;
        textureHeight = 32;

        ModuleBase = new ModelRenderer(this, 0, 0);
        ModuleBase.addBox(0F, 0F, 0F, 4, 6, 1);
        ModuleBase.setRotationPoint(0F, 0F, 0F);
        ModuleBase.setTextureSize(32, 32);
        ModuleBase.mirror = true;
        setRotation(ModuleBase, 0F, 0F, 0F);
        Connector = new ModelRenderer(this, 0, 7);
        Connector.addBox(0F, 0F, 0F, 2, 4, 1);
        Connector.setRotationPoint(1F, 1F, 0.4F);
        Connector.setTextureSize(32, 32);
        Connector.mirror = true;
        setRotation(Connector, 0F, 0F, 0F);
        Circuit1 = new ModelRenderer(this, 0, 15);
        Circuit1.addBox(0F, 0F, 0F, 1, 6, 11);
        Circuit1.setRotationPoint(0F, 0F, -11F);
        Circuit1.setTextureSize(32, 32);
        Circuit1.mirror = true;
        setRotation(Circuit1, 0F, 0F, 0F);
        Circuit2 = new ModelRenderer(this, 3, 3);
        Circuit2.addBox(0F, 0F, 0F, 3, 1, 11);
        Circuit2.setRotationPoint(1F, 5F, -11F);
        Circuit2.setTextureSize(32, 32);
        Circuit2.mirror = true;
        setRotation(Circuit2, 0F, 0F, 0F);
        Circuit3 = new ModelRenderer(this, 0, 3);
        Circuit3.addBox(0F, 0F, 0F, 3, 1, 11);
        Circuit3.setRotationPoint(1F, 2F, -11F);
        Circuit3.setTextureSize(32, 32);
        Circuit3.mirror = true;
        setRotation(Circuit3, 0F, 0F, 0F);
        Component1 = new ModelRenderer(this, 0, 15);
        Component1.addBox(0F, 0F, 0F, 1, 1, 3);
        Component1.setRotationPoint(2F, 1.4F, -4F);
        Component1.setTextureSize(32, 32);
        Component1.mirror = true;
        setRotation(Component1, 0F, 0F, 0F);
        Component2 = new ModelRenderer(this, 0, 19);
        Component2.addBox(0F, 0F, 0F, 1, 1, 1);
        Component2.setRotationPoint(2F, 1.4F, -6F);
        Component2.setTextureSize(32, 32);
        Component2.mirror = true;
        setRotation(Component2, 0F, 0F, 0F);
        Component3 = new ModelRenderer(this, 0, 19);
        Component3.addBox(0F, 0F, 0F, 1, 1, 1);
        Component3.setRotationPoint(2F, 1.4F, -8F);
        Component3.setTextureSize(32, 32);
        Component3.mirror = true;
        setRotation(Component3, 0F, 0F, 0F);
        Component4 = new ModelRenderer(this, 0, 19);
        Component4.addBox(0F, 0F, 0F, 1, 1, 1);
        Component4.setRotationPoint(2F, 1.4F, -10F);
        Component4.setTextureSize(32, 32);
        Component4.mirror = true;
        setRotation(Component4, 0F, 0F, 0F);
        Component5 = new ModelRenderer(this, 0, 15);
        Component5.addBox(0F, 0F, 0F, 1, 1, 2);
        Component5.setRotationPoint(2F, 2.6F, -3F);
        Component5.setTextureSize(32, 32);
        Component5.mirror = true;
        setRotation(Component5, 0F, 0F, 0F);
        Component6 = new ModelRenderer(this, 0, 15);
        Component6.addBox(0F, 0F, 0F, 1, 1, 2);
        Component6.setRotationPoint(2F, 2.6F, -6F);
        Component6.setTextureSize(32, 32);
        Component6.mirror = true;
        setRotation(Component6, 0F, 0F, 0F);
        Component7 = new ModelRenderer(this, 4, 19);
        Component7.addBox(0F, 0F, 0F, 1, 1, 1);
        Component7.setRotationPoint(2F, 2.6F, -8F);
        Component7.setTextureSize(32, 32);
        Component7.mirror = true;
        setRotation(Component7, 0F, 0F, 0F);
        Component8 = new ModelRenderer(this, 4, 19);
        Component8.addBox(0F, 0F, 0F, 1, 1, 1);
        Component8.setRotationPoint(2F, 2.6F, -10F);
        Component8.setTextureSize(32, 32);
        Component8.mirror = true;
        setRotation(Component8, 0F, 0F, 0F);
        Component9 = new ModelRenderer(this, 0, 15);
        Component9.addBox(0F, 0F, 0F, 1, 1, 2);
        Component9.setRotationPoint(2F, 4.4F, -10F);
        Component9.setTextureSize(32, 32);
        Component9.mirror = true;
        setRotation(Component9, 0F, 0F, 0F);
        Component10 = new ModelRenderer(this, 0, 15);
        Component10.addBox(0F, 0F, 0F, 1, 1, 2);
        Component10.setRotationPoint(2F, 4.4F, -7F);
        Component10.setTextureSize(32, 32);
        Component10.mirror = true;
        setRotation(Component10, 0F, 0F, 0F);
        Component11 = new ModelRenderer(this, 4, 19);
        Component11.addBox(0F, 0F, 0F, 1, 1, 1);
        Component11.setRotationPoint(2F, 4.4F, -4F);
        Component11.setTextureSize(32, 32);
        Component11.mirror = true;
        setRotation(Component11, 0F, 0F, 0F);
        Component12 = new ModelRenderer(this, 4, 19);
        Component12.addBox(0F, 0F, 0F, 1, 1, 1);
        Component12.setRotationPoint(2F, 4.4F, -2F);
        Component12.setTextureSize(32, 32);
        Component12.mirror = true;
        setRotation(Component12, 0F, 0F, 0F);
        Component13 = new ModelRenderer(this, 0, 21);
        Component13.addBox(0F, 0F, 0F, 1, 1, 1);
        Component13.setRotationPoint(2F, 5.6F, -4F);
        Component13.setTextureSize(32, 32);
        Component13.mirror = true;
        setRotation(Component13, 0F, 0F, 0F);
        Component14 = new ModelRenderer(this, 0, 21);
        Component14.addBox(0F, 0F, 0F, 1, 1, 1);
        Component14.setRotationPoint(2F, 5.6F, -2F);
        Component14.setTextureSize(32, 32);
        Component14.mirror = true;
        setRotation(Component14, 0F, 0F, 0F);
        Component15 = new ModelRenderer(this, 0, 23);
        Component15.addBox(0F, 0F, 0F, 1, 1, 2);
        Component15.setRotationPoint(2F, 5.6F, -7F);
        Component15.setTextureSize(32, 32);
        Component15.mirror = true;
        setRotation(Component15, 0F, 0F, 0F);
        Component16 = new ModelRenderer(this, 0, 23);
        Component16.addBox(0F, 0F, 0F, 1, 1, 2);
        Component16.setRotationPoint(2F, 5.6F, -10F);
        Component16.setTextureSize(32, 32);
        Component16.mirror = true;
        setRotation(Component16, 0F, 0F, 0F);
        Component17 = new ModelRenderer(this, 0, 15);
        Component17.addBox(0F, 0F, 0F, 1, 2, 2);
        Component17.setRotationPoint(-0.6F, 1F, -3F);
        Component17.setTextureSize(32, 32);
        Component17.mirror = true;
        setRotation(Component17, 0F, 0F, 0F);
        Component18 = new ModelRenderer(this, 0, 15);
        Component18.addBox(0F, 0F, 0F, 1, 2, 2);
        Component18.setRotationPoint(-0.6F, 1F, -6F);
        Component18.setTextureSize(32, 32);
        Component18.mirror = true;
        setRotation(Component18, 0F, 0F, 0F);
        Component19 = new ModelRenderer(this, 13, 15);
        Component19.addBox(0F, 0F, 0F, 1, 2, 3);
        Component19.setRotationPoint(-0.6F, 1F, -10F);
        Component19.setTextureSize(32, 32);
        Component19.mirror = true;
        setRotation(Component19, 0F, 0F, 0F);
        Component20 = new ModelRenderer(this, 0, 21);
        Component20.addBox(0F, 0F, 0F, 1, 1, 1);
        Component20.setRotationPoint(-0.6F, 4F, -10F);
        Component20.setTextureSize(32, 32);
        Component20.mirror = true;
        setRotation(Component20, 0F, 0F, 0F);
        Component21 = new ModelRenderer(this, 0, 21);
        Component21.addBox(0F, 0F, 0F, 1, 1, 1);
        Component21.setRotationPoint(-0.6F, 4F, -8F);
        Component21.setTextureSize(32, 32);
        Component21.mirror = true;
        setRotation(Component21, 0F, 0F, 0F);
        Component22 = new ModelRenderer(this, 0, 19);
        Component22.addBox(0F, 0F, 0F, 1, 1, 1);
        Component22.setRotationPoint(-0.6F, 4F, -6F);
        Component22.setTextureSize(32, 32);
        Component22.mirror = true;
        setRotation(Component22, 0F, 0F, 0F);
        Component23 = new ModelRenderer(this, 0, 19);
        Component23.addBox(0F, 0F, 0F, 1, 1, 1);
        Component23.setRotationPoint(-0.6F, 4F, -4F);
        Component23.setTextureSize(32, 32);
        Component23.mirror = true;
        setRotation(Component23, 0F, 0F, 0F);
        Component24 = new ModelRenderer(this, 0, 19);
        Component24.addBox(0F, 0F, 0F, 1, 1, 1);
        Component24.setRotationPoint(-0.6F, 4F, -2F);
        Component24.setTextureSize(32, 32);
        Component24.mirror = true;
        setRotation(Component24, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        ModuleBase.render(f5);
        Connector.render(f5);
        Circuit1.render(f5);
        Circuit2.render(f5);
        Circuit3.render(f5);
        Component1.render(f5);
        Component2.render(f5);
        Component3.render(f5);
        Component4.render(f5);
        Component5.render(f5);
        Component6.render(f5);
        Component7.render(f5);
        Component8.render(f5);
        Component9.render(f5);
        Component10.render(f5);
        Component11.render(f5);
        Component12.render(f5);
        Component13.render(f5);
        Component14.render(f5);
        Component15.render(f5);
        Component16.render(f5);
        Component17.render(f5);
        Component18.render(f5);
        Component19.render(f5);
        Component20.render(f5);
        Component21.render(f5);
        Component22.render(f5);
        Component23.render(f5);
        Component24.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

}
